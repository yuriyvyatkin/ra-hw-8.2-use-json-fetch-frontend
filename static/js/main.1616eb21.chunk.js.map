{"version":3,"sources":["functions/useJsonFetch.js","components/First.js","components/Second.js","components/Third.js","App.js","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","opts","useState","loading","setLoading","data","setData","error","setError","useEffect","fetch","then","response","json","test","status","catch","message","finally","First","process","console","log","Second","Third","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEe,SAASA,EAAaC,GAAiB,IAAZC,EAAW,uDAAJ,GAAI,EACrBC,oBAAS,GADY,mBAC5CC,EAD4C,KACnCC,EADmC,OAE3BF,qBAF2B,mBAE5CG,EAF4C,KAEtCC,EAFsC,OAGzBJ,qBAHyB,mBAG5CK,EAH4C,KAGrCC,EAHqC,KA4BnD,OAvBAC,qBAAU,WACRC,MAAMV,EAAD,eACAC,IAEFU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACN,GACAA,EAEM,SAASS,KAAKT,EAAKU,QAC5BP,EAASH,EAAKU,QAEdT,EAAQD,EAAKU,QAJbP,EAAS,6BAOZQ,OAAM,SAACT,GACNC,EAASD,EAAMU,YAEhBC,SAAQ,WACPd,GAAW,QAGd,IAEI,CAAEC,OAAMF,UAASI,SC5BX,SAASY,IAAS,IAAD,EACJpB,EAAa,GAAD,OAAIqB,2DAAlCjB,EADsB,EACtBA,QAASE,EADa,EACbA,KAMjB,OAJKF,GACHkB,QAAQC,IAAR,gCAAqCjB,IAGhC,KCPM,SAASkB,IAAU,IAAD,EACJxB,EAAa,GAAD,OAAIqB,4DAAnCjB,EADuB,EACvBA,QAASI,EADc,EACdA,MAMjB,OAJKJ,GACHkB,QAAQC,IAAR,kCAAuCf,IAGlC,KCPM,SAASiB,IAAS,IAAD,EACJzB,EAAa,GAAD,OAAIqB,8DAAlCf,EADsB,EACtBA,KAAMF,EADgB,EAChBA,QAMd,OAJIE,GAAQF,GACVkB,QAAQC,IAAR,mCAAwCnB,IAGnC,K,WCKMsB,MAVf,WACE,OACE,qCACE,cAACN,EAAD,IACA,cAACI,EAAD,IACA,cAACC,EAAD,QCGSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1616eb21.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useJsonFetch(url, opts = {}) {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    fetch(url, {\n      ...opts,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data) {\n          setError('Error! Empty Data Set.');\n        } else if (/error/i.test(data.status)) {\n          setError(data.status);\n        } else {\n          setData(data.status);\n        }\n      })\n      .catch((error) => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { data, loading, error };\n}\n","import useJsonFetch from '../functions/useJsonFetch';\n\nexport default function First() {\n  const { loading, data } = useJsonFetch(`${process.env.REACT_APP_DATA_URL}`);\n\n  if (!loading) {\n    console.log(`First component data: ${data}`);\n  }\n\n  return null;\n}\n","import useJsonFetch from '../functions/useJsonFetch';\n\nexport default function Second() {\n  const { loading, error } = useJsonFetch(`${process.env.REACT_APP_ERROR_URL}`);\n\n  if (!loading) {\n    console.log(`Second component error: ${error}`);\n  }\n\n  return null;\n}\n","import useJsonFetch from '../functions/useJsonFetch';\n\nexport default function Third() {\n  const { data, loading } = useJsonFetch(`${process.env.REACT_APP_LOADING_URL}`);\n\n  if (data && loading) {\n    console.log(`Third component loading: ${loading}`);\n  }\n\n  return null;\n}\n","import First from './components/First';\nimport Second from './components/Second';\nimport Third from './components/Third';\n\nfunction App() {\n  return (\n    <>\n      <First />\n      <Second />\n      <Third />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}